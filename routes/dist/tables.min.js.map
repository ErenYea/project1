{"version":3,"sources":["tables.js"],"names":["express","require","router","Router","gettablenames","req","getcolumndata","element","resolve","mysqlConnection","query","reject","concat","key","err","rows","fields","console","allfunct","tablenames","data","array_of_table","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","object_of_data","newarr","regeneratorRuntime","async","_context","prev","next","awrap","sent","undefined","Symbol","iterator","done","value","t0","keys","t1","push","t2","finish","abrupt","stop","_context2","res","render","title","cond","module","exports"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,gBAAkBC,QAAtB,kBAYEC,OAAME,IAAAA,IAAAA,SAAgBC,EAAhBD,EAAAA,GAce,SAAnBE,EAAmBC,EAACC,GAClBC,OAAAA,IAAAA,QAAgBC,SAAAA,EAAhBC,GACEF,gBAAOC,MAAP,iBAAAE,OAAOL,EAAAM,IAAA,SAAAC,EAAAC,EAAAC,GACLC,GACAN,QAAOG,IAAP,kBAAAA,GAFFH,EAGMG,IAELN,EAAAO,OAIU,SAAXG,IAAW,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAd,EAAA,GAEXC,EAAO,GAFIW,EAAAE,KAAA,EAAAJ,mBAAAK,MAvBfzB,IAAAA,QAAe,SAACC,EAAMC,GAClBF,gBAAQC,MAAA,cAAA,SAAAI,EAAAC,EAAAC,GACNC,GACAN,QAAOG,IAAP,iBAAAA,GAFFH,EAGMG,IAELN,EAAAO,QAiBU,KAAA,EAAAM,EAAAU,EAAAI,KAAAZ,IAAAD,GAAA,GAAAE,OAAAY,EAAAL,EAAAC,KAAA,EAAAP,EAAAJ,EAAAgB,OAAAC,YAAA,KAAA,GAAA,GAAAhB,GAAAI,EAAAD,EAAAQ,QAAAM,KAAA,CAAAR,EAAAE,KAAA,GAAA,MAAA1B,QAAAmB,EAAAc,MAAAT,EAAAU,GAAAZ,mBAAAa,KAAAnC,SAAA,KAAA,GAAA,IAAAwB,EAAAY,GAAAZ,EAAAU,MAAAF,KAAA,CAAAR,EAAAE,KAAA,GAAA,MAAA,OAAApB,IAAAkB,EAAAY,GAAAH,MAEXpB,EAAOwB,KAFIrC,QAAAM,MAAAkB,EAAAE,KAAA,GAAAJ,mBAAAK,MAAA5B,EAAAC,QAAAM,MAAA,KAAA,GAAAc,EAAAI,EAAAI,KAAAf,EAAAwB,KAAAjB,GAAAI,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAX,GAAA,EAAAS,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,MAAA,GAAAR,GAAA,EAAAC,EAAAO,EAAAc,GAAA,KAAA,GAAAd,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAV,GAAA,MAAAG,EAAA,QAAAA,EAAA,SAAA,KAAA,GAAA,GAAAM,EAAAC,KAAA,GAAAT,EAAA,MAAAC,EAAAO,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAe,OAAA,IAAA,KAAA,GAAA,OAAAf,EAAAe,OAAA,IAAA,KAAA,GAAA,OAAAlB,EAAA,CAAAT,EAAAC,GAAAW,EAAAgB,OAAA,SAAAnB,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAG,EAAAiB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,MAxBjB,IAwBiBpB,EAAAT,EAAAC,EAAAS,mBAAAC,MAAA,SAAAmB,GAAA,OAAA,OAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAAA,OAAAgB,EAAAhB,KAAA,EAAAJ,mBAAAK,MAoBIhB,KApBJ,KAAA,EAoBXU,EApBWqB,EAAAd,KAAAhB,EAAAS,EAAA,GAAAR,EAAAQ,EAAA,GAAAsB,EAAAC,OAAA,SAAA,CAAAC,MAAA,UA0BXhC,KAAMA,EArBLb,WALUY,EAAAkC,KAAA,UAAA,KAAA,EAAA,IAAA,MAAA,OAAAJ,EAAAD,YAyCnBM,OAAOC,QAAUrD","file":"tables.min.js","sourcesContent":["var express = require(\"express\");\r\nvar router = express.Router();\r\nconst mysqlConnection = require(\"./mysqlconn.js\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /* GET users listing. */\r\nrouter.get(\"/\", function (req, res, next) {\r\n  const gettablenames = () =>{\r\n  return new Promise((resolve,reject)=>{\r\n    mysqlConnection.query(\"show tables\",(err,rows,fields)=>{\r\n        if (err){\r\n          console.log(\"First Function\",err)\r\n          reject(err);\r\n        } else{\r\n          resolve(rows);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const getcolumndata = (element,key) =>{\r\n    return new Promise((resolve,reject)=>{\r\n      mysqlConnection.query(`SELECT * from ${element[key]}`,(err,rows,fields)=>{\r\n        if(err){\r\n          console.log(\"Second function\",err)\r\n          reject(err);\r\n        } else{\r\n          resolve(rows);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  const allfunct = async () => {\r\n    var tablenames = [];\r\n    var data = [];\r\n    var array_of_table = await gettablenames();\r\n    // console.log(array_of_table);\r\n    for (element of array_of_table){\r\n      for (key in element){\r\n        // console.log(element[key]);\r\n        tablenames.push(element[key]);\r\n        var object_of_data = await getcolumndata(element,key);\r\n        data.push(object_of_data);\r\n        \r\n      }\r\n    }\r\n    // console.log(data)\r\n    // console.log(tablenames)\r\n    var newarr = [tablenames,data];\r\n    return newarr;\r\n  }\r\n  const start = async () => {\r\n    var newarr = await allfunct()\r\n    var tablenames = newarr[0]\r\n    var data = newarr[1]\r\n    // console.log(tablenames);\r\n    res.render(\"tables\", {\r\n        title: \"Express\",\r\n        data: data,\r\n        tablenames: tablenames,\r\n        cond:\"table\"\r\n    });\r\n  }\r\n  start();\r\n  \r\n  \r\n  \r\n  \r\n});\r\n\r\n  \r\n\r\n\r\nmodule.exports = router;\r\n"]}